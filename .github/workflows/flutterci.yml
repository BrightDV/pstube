name: FlutterCI

on:
  push:
    branches:
      - main
      - next
    paths-ignore:
      - "README.md"
      - "docs/**"
  workflow_dispatch:
  release:
    types:
      - created
      - edited

jobs:
  build-android:
    name: Android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: beta

      - name: Generate android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.4
        with:
          fileName: key.jks
          encodedString: ${{ secrets.KEY_JKS }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Build Flutter app
        run: flutter build apk --split-per-abi

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/apk/release/flutube-android-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'continuous' }}
          overwrite: true

  build-linux:
    name: Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: beta

      - name: Install linux app dependencies
        run: sudo apt-get update -y && sudo apt-get install -y ninja-build libgtk-3-dev dpkg-dev pkg-config

      - name: Enable desktop support
        run: flutter config --enable-linux-desktop

      - name: Build Flutter app
        run: flutter build linux -v

      - name: Build .deb
        run: |
          cp -fr build/linux/x64/release/bundle linux/packaging/usr/bin
          dpkg-deb --build --root-owner-group linux/packaging
          cp linux/*.deb flutube-linux-x86_64.deb

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/packaging/usr AppDir/
          ln -sr AppDir/usr/bin/flutube AppDir/flutube
          tar czf flutube-linux-x86_64.tar.gz -C AppDir/ .

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./flutube' > AppDir/AppRun
          chmod +x AppDir/AppRun
          ln -sr AppDir/usr/share/icons/hicolor/128x128/apps/flutube.png AppDir/flutube.png
          cp AppDir/usr/share/applications/flutube.desktop AppDir/flutube.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ flutube-linux-x86_64.AppImage

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./flutube-linux-x86_64*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'continuous' }}
          overwrite: true

  build_windows:
    name: Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: beta

      - name: Enable desktop support
        run: flutter config --enable-windows-desktop

      - name: Build Flutter app
        run: flutter build windows

      - uses: papeloto/action-zip@master
        with:
          files: build/windows/runner/release/
          dest: flutube-windows.zip

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: flutube-windows.zip
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'continuous' }}
          overwrite: true
